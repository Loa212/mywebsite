---
// sizes
type sizeOpt = "xs" | "sm" | "md" | "lg";

// square
type squareOpt = boolean;

// circle
type circleOpt = boolean;

//active
type activeOpt = boolean;

// outline
type outlineOpt = boolean;

// variantOpt has brand, outline & state colors
type variantOpt =
  | "primary"
  | "secondary"
  | "accent"
  | "ghost"
  | "link"
  | "neutral"
  | "info"
  | "success"
  | "warning"
  | "error";

export interface Props {
  size?: sizeOpt;
  square?: squareOpt;
  circle?: circleOpt;
  active?: activeOpt;
  outline?: outlineOpt;
  variant?: variantOpt;
  className?: string;
}

const {
  variant = "primary",
  size = "md",
  square = false,
  circle = false,
  active = false,
  outline = false,
} = Astro.props;

const getClasslist = (): string => {
  const classlist = ["btn"];
  if (active) {
    classlist.push("btn-active");
  }
  if (variant) {
    classlist.push(`btn-${variant}`);
  }
  if (size) {
    classlist.push(`btn-${size}`);
  }
  if (outline) {
    classlist.push("btn-outline");
  }
  if (square) {
    classlist.push("btn-square");
  }
  if (circle) {
    classlist.push("btn-circle");
  }

  const classes = classlist.join(" ");

  return Astro.props.className
    ? `${classes} ${Astro.props.className}`
    : classes;
};
---

<button class={getClasslist()}>
  <slot />
</button>
